version: 2
builds:
  - env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
    goos:
      # - freebsd
      - windows
      - linux
      - darwin
    goarch:
      - amd64
      - arm64
    binary: '{{ .ProjectName }}'
    ignore:
      - goos: darwin
        goarch: "386"
snapshot:
  version_template: '{{ incpatch .Version }}'
archives:
  - formats: [zip]
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_SHA256SUMS"
  algorithm: sha256
signs:
  - artifacts: checksum
    args:
      # if you are using this is a GitHub action or some other automated pipeline, you
      # need to pass the batch flag to indicate it's not interactive.
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}" # set this environment variable for the signing key
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
release:
  draft: false
changelog:
  use: git
  filters:
    include:
      - "^feat:"
      - "^fix:"
      - "^chore:"
      - "^docs:"
  sort: asc
  groups:
    - title: "üöÄ Features"
      regexp: "^.*?feat(\\([\\w]+\\))?!?:.+$"
      order: 0
    - title: "üêõ Bug Fixes"
      regexp: "^.*?fix(\\([\\w]+\\))?!?:.+$"
      order: 1
    - title: "üõ† Maintenance"
      regexp: "^.*?chore(\\([\\w]+\\))?!?:.+$"
      order: 2

# To check deprecations:
# https://goreleaser.com/deprecations/
